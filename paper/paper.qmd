---
title: "My title"
subtitle: "My subtitle if needed"
author: 
  - First author
  - Another author
thanks: "Code and data are available at: [https://github.com/RohanAlexander/starter_folder](https://github.com/RohanAlexander/starter_folder)."
date: today
date-format: long
abstract: "First sentence. Second sentence. Third sentence. Fourth sentence."
format: pdf
number-sections: true
bibliography: references.bib
---

```{r}
#| include: false
#| warning: false
#| message: false

library(tidyverse)
library(arrow)
library(here)
library(tibble)
library(knitr)
cleaned_data <- read_parquet(here("data/02-analysis_data/cleaned_data.parquet"))
cleaned_data <- cleaned_data %>% filter(year >= 2021)
```


# Introduction

\newpage

# Data and Graphs

```{r}
cleaned_data %>% head()

stadium_boundaries <- cleaned_data %>%
  group_by(venue) %>%
  summarise(
    num_boundaries = sum(is_boundary == TRUE),  
    num_balls = n(),                             
    boundary_pct = num_boundaries / num_balls
  ) %>% arrange(desc(boundary_pct), desc(num_balls))

ggplot(stadium_boundaries, aes(x = reorder(venue, boundary_pct), y = boundary_pct)) +
  geom_bar(stat = "identity", fill = "steelblue") +
  labs(title = "Boundary Percentage by Stadium",
       x = "Stadium Name",
       y = "Boundary Percentage") +
  theme_minimal() +
  coord_flip()

```

```{r}

target_boundaries <- cleaned_data %>%
  group_by(match_id, target) %>%
  summarise(
    num_boundaries = sum(is_boundary == TRUE),  
    num_balls = n(),                             
    boundary_pct = num_boundaries / num_balls
  ) %>% arrange(desc(boundary_pct), desc(num_balls))

ggplot(target_boundaries, aes(x = target, y = boundary_pct)) +
  geom_point(color = "steelblue", size = 3, alpha = 0.5) +
  labs(title = "Boundary Percentage vs Target per Match",
       x = "Target",
       y = "Boundary Percentage") +
  geom_smooth(method = "lm", color = "red") +
  theme_minimal() 
```

```{r}

over_boundaries <- cleaned_data %>%
  group_by(over) %>%
  summarise(
    num_boundaries = sum(is_boundary == TRUE),  
    num_balls = n(),                             
    boundary_pct = num_boundaries / num_balls
  ) %>% arrange(desc(boundary_pct), desc(num_balls))

ggplot(over_boundaries, aes(x = over, y = boundary_pct)) +
  geom_point(color = "steelblue", size = 3) +
  labs(title = "Boundary Percentage vs Over Number",
       x = "Over",
       y = "Boundary Percentage") +
  theme_minimal() 


```

```{r}

bowling_batting_matchup_boundaries <- cleaned_data %>%
  group_by(bowling_style, batting_style) %>%
  summarise(
    num_boundaries = sum(is_boundary == TRUE),  
    num_balls = n(),                             
    boundary_pct = num_boundaries / num_balls
  ) %>% arrange(desc(boundary_pct), desc(num_balls))

ggplot(bowling_batting_matchup_boundaries, aes(x = bowling_style, y = boundary_pct, fill = batting_style)) +
  geom_bar(stat = "identity", position = position_dodge()) +
  labs(title = "Boundary Percentage by Bowling and Batting Style",
       x = "Bowling and Batting Style",
       y = "Boundary Percentage") +
  theme_minimal() +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))

```

```{r}

over_bowlers <- cleaned_data %>%
  group_by(over, bowling_style) %>%
  summarise(ball_count = n())
```


# Model

```{r}
model <- glm(is_boundary ~ target, family = binomial, data = cleaned_data)
summary(model)
```
```{r}

model <- glm(is_boundary ~ over, family = binomial, data = cleaned_data)
summary(model)

```
```{r}

model <- glm(is_boundary ~ target + bowling_style + batting_style, family = binomial, data = cleaned_data)
summary(model)

```

# References


